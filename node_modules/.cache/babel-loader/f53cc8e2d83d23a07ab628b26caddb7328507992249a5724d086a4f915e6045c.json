{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TETRA\\\\Desktop\\\\\\uC9C4\\uD589\\uC911\\uC778\\uC791\\uC5C5\\\\react-disney-plus-app\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport requests from '../api/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  var _movie$videos, _movie$videos$results;\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재상영중인 영화 정보를 꺼내오기\n    const response = await axios.get(requests.fetchNowPlaying);\n\n    // 여러영화중 1개의 id 가져오기\n    const movieId = response.data.results[Math.floor(Math.random() * response.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보 가져오기(비디오정보 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`,\n      backgroundPosition: \"top center\",\n      backgroundSize: \"cover\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"banner_title\",\n        children: movie.title || movie.name || movie.original_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_buttons\",\n        children: (movie === null || movie === void 0 ? void 0 : (_movie$videos = movie.videos) === null || _movie$videos === void 0 ? void 0 : (_movie$videos$results = _movie$videos.results[0]) === null || _movie$videos$results === void 0 ? void 0 : _movie$videos$results.key) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner_button_play\",\n          children: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"banner_discription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","axios","requests","jsxDEV","_jsxDEV","Banner","_s","_movie$videos","_movie$videos$results","movie","setMovie","fetchData","response","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","children","title","name","original_name","fileName","_jsxFileName","lineNumber","columnNumber","videos","key","_c","$RefreshReg$"],"sources":["C:/Users/TETRA/Desktop/진행중인작업/react-disney-plus-app/src/components/Banner.js"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from '../api/axios'\r\nimport requests from '../api/requests'\r\n\r\n\r\n\r\nconst Banner = () => {\r\n    \r\n\tconst [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n  \r\n  const fetchData = async() => {\r\n\r\n\t// 현재상영중인 영화 정보를 꺼내오기\r\n    const response = await axios.get(requests.fetchNowPlaying);\r\n\r\n\t// 여러영화중 1개의 id 가져오기\r\n\tconst movieId =\r\n\tresponse.data.results[\r\n\t\tMath.floor(Math.random() * response.data.results.length)\r\n\t].id;\r\n\r\n\t// 특정 영화의 더 상세한 정보 가져오기(비디오정보 포함)\r\n\tconst { data : movieDetail} = await axios.get(`movie/${movieId}`,{\r\n\t\tparams : { append_to_response: \"videos\"},\r\n\t});\r\n\tsetMovie(movieDetail);\r\n\r\n  }\r\n\r\n  return (\r\n    <header \r\n\t\tclassName='banner'\r\n\t\tstyle={{\r\n\t\t\tbackgroundImage:`url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`,\r\n\t\t\tbackgroundPosition : \"top center\",\r\n\t\t\tbackgroundSize : \"cover\"\r\n\t\t}}\r\n\t>\r\n\t\t<div className='banner_contents'>\r\n\t\t\t<h1 className='banner_title'>\r\n\t\t\t\t{movie.title || movie.name || movie.original_name}\r\n\t\t\t</h1>\r\n\t\t\t<div className='banner_buttons'>\r\n\t\t\t\t{movie?.videos?.results[0]?.key &&\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='banner_button_play'\r\n\t\t\t\t>\r\n\t\t\t\t\tplay\r\n\t\t\t\t</button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<p className='banner_discription'>\r\n\r\n\t\t\t</p>\r\n\t\t</div>\r\n\r\n\t</header>\r\n\r\n  )\r\n}\r\n\r\nexport default Banner"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,QAAQ,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAItC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,qBAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAW;IAE9B;IACG,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACX,QAAQ,CAACY,eAAe,CAAC;;IAE7D;IACA,MAAMC,OAAO,GACbH,QAAQ,CAACI,IAAI,CAACC,OAAO,CACpBC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACI,MAAM,CAAC,CACxD,CAACC,EAAE;;IAEJ;IACA,MAAM;MAAEN,IAAI,EAAGO;IAAW,CAAC,GAAG,MAAMtB,KAAK,CAACY,GAAG,CAAE,SAAQE,OAAQ,EAAC,EAAC;MAChES,MAAM,EAAG;QAAEC,kBAAkB,EAAE;MAAQ;IACxC,CAAC,CAAC;IACFf,QAAQ,CAACa,WAAW,CAAC;EAEpB,CAAC;EAED,oBACEnB,OAAA;IACFsB,SAAS,EAAC,QAAQ;IAClBC,KAAK,EAAE;MACNC,eAAe,EAAE,2CAA0CnB,KAAK,CAACoB,aAAc,GAAE;MACjFC,kBAAkB,EAAG,YAAY;MACjCC,cAAc,EAAG;IAClB,CAAE;IAAAC,QAAA,eAEF5B,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAAM,QAAA,gBAC/B5B,OAAA;QAAIsB,SAAS,EAAC,cAAc;QAAAM,QAAA,EAC1BvB,KAAK,CAACwB,KAAK,IAAIxB,KAAK,CAACyB,IAAI,IAAIzB,KAAK,CAAC0B;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACLnC,OAAA;QAAKsB,SAAS,EAAC,gBAAgB;QAAAM,QAAA,EAC7B,CAAAvB,KAAK,aAALA,KAAK,wBAAAF,aAAA,GAALE,KAAK,CAAE+B,MAAM,cAAAjC,aAAA,wBAAAC,qBAAA,GAAbD,aAAA,CAAeU,OAAO,CAAC,CAAC,CAAC,cAAAT,qBAAA,uBAAzBA,qBAAA,CAA2BiC,GAAG,kBAC/BrC,OAAA;UACCsB,SAAS,EAAC,oBAAoB;UAAAM,QAAA,EAC9B;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC,eACNnC,OAAA;QAAGsB,SAAS,EAAC;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAGV,CAAC;AAAAjC,EAAA,CAzDKD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AA2DZ,eAAeA,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}