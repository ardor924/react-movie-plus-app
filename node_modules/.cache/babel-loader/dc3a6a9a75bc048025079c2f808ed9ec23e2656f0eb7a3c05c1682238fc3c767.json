{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlrnj\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\ReactProject\\\\cloneReact\\\\react-disney-plus-app\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from '../api/axios';\nimport requests from '../api/requests';\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화) \n    const response = await axios.get(requests.fetchNowPlaying);\n\n    // 여러 영화 중 영화 하나의 ID를 가져오기 \n    const movieId = response.data.results[Math.floor(Math.random() * response.data.results.length)].id;\n\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\n    const {\n      data: movieDetail\n    } = await axios.get(`movie/${movieId}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    });\n    setMovie(movieDetail);\n  };\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substring(0, n) + \"...\" : str;\n  };\n  if (isClicked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(HomeContainer, {\n          children: /*#__PURE__*/_jsxDEV(Iframe, {\n            src: `https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movie.videos.results[0].key}`,\n            width: \"640\",\n            height: \"360\",\n            frameborder: \"0\",\n            allow: \"autoplay; fullscreen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsClicked(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    var _movie$videos, _movie$videos$results;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"top center\",\n        backgroundSize: \"cover\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 10\n        },\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: movie.title || movie.name || movie.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: (movie === null || movie === void 0 ? void 0 : (_movie$videos = movie.videos) === null || _movie$videos === void 0 ? void 0 : (_movie$videos$results = _movie$videos.results[0]) === null || _movie$videos$results === void 0 ? void 0 : _movie$videos$results.key) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button play\",\n            onClick: () => setIsClicked(true),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"banner__description\",\n          children: truncate(movie.overview, 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Banner, \"R9stJPTA5NGL+iZVozDaQaKtmNg=\");\n_c = Banner;\nexport default Banner;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n_c2 = Container;\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n_c3 = HomeContainer;\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n  z-index: -1; \n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n_c4 = Iframe;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"HomeContainer\");\n$RefreshReg$(_c4, \"Iframe\");","map":{"version":3,"names":["React","useEffect","useState","styled","axios","requests","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","isClicked","setIsClicked","fetchData","response","get","fetchNowPlaying","movieId","data","results","Math","floor","random","length","id","movieDetail","params","append_to_response","truncate","str","n","substring","children","Container","HomeContainer","Iframe","src","videos","key","width","height","frameborder","allow","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_movie$videos","_movie$videos$results","className","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","fontSize","title","name","original_name","overview","_c","div","_c2","_c3","iframe","_c4","$RefreshReg$"],"sources":["C:/Users/dlrnj/OneDrive/바탕 화면/ReactProject/cloneReact/react-disney-plus-app/src/components/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport axios from '../api/axios';\r\nimport requests from '../api/requests';\r\nimport \"./Banner.css\";\r\n\r\n\r\nconst Banner = () => {\r\n\r\n  const [movie, setMovie] = useState([]);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  const fetchData = async () => {\r\n    // 현재 상영중인 영화 정보를 가져오기(여러 영화) \r\n    const response = await axios.get(requests.fetchNowPlaying);\r\n\r\n    // 여러 영화 중 영화 하나의 ID를 가져오기 \r\n    const movieId = response.data.results[\r\n      Math.floor(Math.random() * response.data.results.length)\r\n    ].id\r\n\r\n    // 특정 영화의 더 상세한 정보를 가져오기(비디오 정보도 포함)\r\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\r\n      params: { append_to_response: \"videos\" }\r\n    })\r\n\r\n    setMovie(movieDetail);\r\n  }\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substring(0, n) + \"...\" : str;\r\n  }\r\n\r\n\r\n\r\n\r\n  if (isClicked) {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <HomeContainer>\r\n            <Iframe\r\n              src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movie.videos.results[0].key}`}\r\n              width=\"640\"\r\n              height=\"360\"\r\n              frameborder=\"0\"\r\n              allow=\"autoplay; fullscreen\"\r\n            ></Iframe>\r\n          </HomeContainer>\r\n        </Container>\r\n        <button onClick={() => setIsClicked(false)}>X</button>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <header\r\n        className='banner'\r\n        style={{\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\r\n          backgroundPosition: \"top center\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <div style={{ fontSize: 10 }} className='banner__contents'>\r\n          <h1 className='banner__title'>\r\n            {movie.title || movie.name || movie.original_name}\r\n          </h1>\r\n\r\n          <div className='banner__buttons'>\r\n            {movie?.videos?.results[0]?.key &&\r\n              <button\r\n                className='banner__button play'\r\n                onClick={() => setIsClicked(true)}\r\n              >\r\n                Play\r\n              </button>\r\n            }\r\n\r\n          </div>\r\n          <p className='banner__description'>\r\n            {truncate(movie.overview, 100)}\r\n          </p>\r\n        </div>\r\n        <div className='banner--fadeBottom' />\r\n      </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Banner\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Iframe = styled.iframe`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1; \r\n  opacity: 0.65;\r\n  border: none;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}